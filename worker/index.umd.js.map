{"version":3,"file":"index.umd.js","sources":["../src/util.js","../src/worker.js"],"sourcesContent":["export function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n\nexport function applyUpdate(state, update) {\n\tif (Array.isArray(state)) {\n\t\tstate = state.slice(0, update.length);\n\t\tfor (let i=0; i<update.length; i++) {\n\t\t\tif (update[i]!==undefined) {\n\t\t\t\tstate[i] = applyOne(update[i], state[i]);\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tstate = assign({}, state);\n\t\tfor (let i in update) if (update.hasOwnProperty(i)) {\n\t\t\tif (update[i]===undefined) {\n\t\t\t\tdelete state[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstate[i] = applyOne(update[i], state[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn state;\n}\n\nfunction applyOne(obj, prev) {\n\tif (prev!=null && obj!=null && typeof prev==='object' && typeof obj==='object') {\n\t\treturn applyUpdate(prev, obj);\n\t}\n\treturn obj;\n}\n\n\nexport function diff(obj, prev) {\n\tlet update, i;\n\tif (Array.isArray(obj)) {\n\t\tupdate = new Array(obj.length);\n\t\tfor (i=0; i<obj.length; i++) {\n\t\t\tif (obj[i]!==prev[i]) {\n\t\t\t\tupdate[i] = diffOne(obj[i], prev[i]);\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tupdate = {};\n\t\tfor (i in obj) {\n\t\t\tif (obj.hasOwnProperty(i) && obj[i]!==prev[i]) {\n\t\t\t\tupdate[i] = diffOne(obj[i], prev[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn update;\n}\n\nfunction diffOne(obj, prev) {\n\tif (obj!=null && prev!=null && typeof obj==='object' && typeof prev==='object') {\n\t\treturn diff(obj, prev);\n\t}\n\treturn obj;\n}\n\n","import createStore from 'unistore';\nimport { applyUpdate } from './util';\n\n\n/** The other half of stockroom, which runs inside a Web Worker.\n *\t@name module:stockroom/worker\n */\nlet worker; // eslint-disable-line\n\n\n/** Creates a unistore instance for use in a Web Worker that synchronizes itself to the main thread.\n *\t@memberof module:stockroom/worker\n *  @param {Object} [initialState={}]\tInitial state to populate\n *  @returns {WorkerStore} workerStore (enhanced unistore store)\n *\t@example\n *\timport createWorkerStore from 'stockroom/worker'\n *\tlet initialState = { count: 0 }\n *\tlet store = createWorkerStore(initialState)\n *\tstore.registerActions({\n *\t\tincrement(state) {\n *\t\t\treturn { count: state.count + 1 }\n *\t\t}\n *\t})\n */\nexport default function createWorkerStore(initialState) {\n\tlet store = createStore(initialState),\n\t\tactions = store.actions = {},\n\t\tcurrentState = {},\n\t\tfrozen = 0,\n\t\tonThaw = [],\n\t\tsendQueue = [],\n\t\tlock = false;\n\n\tfor (let i in initialState) currentState[i] = initialState[i];\n\n\tfunction send(opts) {\n\t\tif (sendQueue.push(opts)===1) {\n\t\t\tsetTimeout(processSendQueue);\n\t\t}\n\t}\n\n\tfunction processSendQueue() {\n\t\tif (typeof postMessage==='function' && postMessage.length === 1) postMessage(sendQueue);\n\t\tsendQueue.length = 0;\n\t}\n\n\tfunction handleMessage({ data }) {\n\t\tif (typeof data!=='object') {}\n\t\telse if ('pop' in data) {\n\t\t\tif (data.length===1) {\n\t\t\t\tprocess(data[0]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (let i=0; i<data.length; i++) process(data[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tprocess(data);\n\t\t}\n\t}\n\n\tfunction process(data) {\n\t\tif (frozen>0) return onThaw.push(data);\n\t\tlet { type, id, overwrite, partial, update, action } = data;\n\t\tif (type==='@@STATE') {\n\t\t\tif (partial===true) {\n\t\t\t\tupdate = applyUpdate(store.getState(), update);\n\t\t\t\toverwrite = true;\n\t\t\t}\n\t\t\tstore.setState(update, overwrite===true, action);\n\t\t}\n\t\telse if (type==='@@ACTION') {\n\t\t\tlet fn = actions[action.type];\n\t\t\tif (action.params) fn.apply(actions, action.params);\n\t\t\telse fn.call(actions, action.payload);\n\t\t\tif (id) send({ type: '@@ACTIONCOMPLETE', id });\n\t\t}\n\t}\n\tif (typeof addEventListener==='function') addEventListener('message', handleMessage);\n\n\tstore.subscribe( (state, action, update, params) => {\n\t\tif (lock===true) return;\n\t\t// console.log('sub: ', { action, lock, update, state, currentState });\n\t\tcurrentState = state;\n\t\tsend({ type: '@@STATE', update, action: action && action.name, partial: true, params });\n\t});\n\n\tstore.registerActions = newActions => {\n\t\tif (typeof newActions==='function') newActions = newActions(store);\n\t\tfor (let i in newActions) {\n\t\t\tactions[i] = store.action(newActions[i]);\n\t\t}\n\t};\n\n\t/** Queue all additional processing until unfrozen.\n\t *\tfreeze/unfreeze manages a cumulative lock:\n\t *\tunfreeze must be called as many times as freeze was called in order to remove the lock.\n\t */\n\tstore.freeze = () => {\n\t\tfrozen++;\n\t};\n\n\t/** Remove a freeze lock and process queued work. */\n\tstore.unfreeze = () => {\n\t\tif (--frozen) return;\n\t\tlet r = onThaw;\n\t\tonThaw = [];\n\t\tfor (let i=0; i<r.length; i++) process(r[i]);\n\t};\n\n\tsend({ type: '@@STATE', initial: true, update: store.getState() });\n\n\treturn store;\n}\n"],"names":["applyUpdate","state","update","Array","isArray","slice","length","let","i","undefined","applyOne","obj","props","assign","hasOwnProperty","prev","initialState","store","createStore","actions","currentState","frozen","onThaw","sendQueue","send","opts","push","setTimeout","processSendQueue","postMessage","process","data","type","id","overwrite","action","getState","setState","fn","params","apply","call","payload","addEventListener","ref","subscribe","name","partial","registerActions","newActions","freeze","unfreeze","r","initial"],"mappings":"mNAMA,SAAgBA,EAAYC,EAAOC,GAClC,GAAIC,MAAMC,QAAQH,GAAQ,CACzBA,EAAQA,EAAMI,MAAM,EAAGH,EAAOI,QAC9B,IAAKC,IAAIC,EAAE,EAAGA,EAAEN,EAAOI,OAAQE,SACdC,IAAZP,EAAOM,KACVP,EAAMO,GAAKE,EAASR,EAAOM,GAAIP,EAAMO,UAMvC,IAAKD,IAAIC,KADTP,EAhBK,SAAgBU,EAAKC,GAC3B,IAAKL,IAAIC,KAAKI,EAAOD,EAAIH,GAAKI,EAAMJ,GACpC,OAAOG,EAcEE,IAAWZ,GACLC,EAAYA,EAAOY,eAAeN,UAC/BC,IAAZP,EAAOM,UACHP,EAAMO,GAGbP,EAAMO,GAAKE,EAASR,EAAOM,GAAIP,EAAMO,KAIxC,OAAOP,EAGR,SAASS,EAASC,EAAKI,GACtB,OAAU,MAANA,GAAmB,MAALJ,GAA2B,iBAAPI,GAAgC,iBAANJ,EACxDX,EAAYe,EAAMJ,GAEnBA,sDCTO,SAA2BK,GACzCT,IAAIU,EAAQC,EAAYF,GACvBG,EAAUF,EAAME,WAChBC,KACAC,EAAS,EACTC,KACAC,KAGD,IAAKhB,IAAIC,KAAKQ,EAAcI,EAAaZ,GAAKQ,EAAaR,GAE3D,SAASgB,EAAKC,GACc,IAAvBF,EAAUG,KAAKD,IAClBE,WAAWC,GAIb,SAASA,IACiB,mBAAdC,aAAmD,IAAvBA,YAAYvB,QAAcuB,YAAYN,GAC7EA,EAAUjB,OAAS,EAkBpB,SAASwB,EAAQC,GAChB,GAAIV,EAAO,EAAG,OAAOC,EAAOI,KAAKK,GACjC,IAAMC,SAAMC,OAAIC,cAAoBhC,WAAQiC,WAC5C,GAAW,YAAPH,GACW,gBACb9B,EAASF,EAAYiB,EAAMmB,WAAYlC,GACvCgC,GAAY,GAEbjB,EAAMoB,SAASnC,GAAoB,IAAZgC,EAAkBC,QAErC,GAAW,aAAPH,EAAmB,CAC3BzB,IAAI+B,EAAKnB,EAAQgB,EAAOH,MACpBG,EAAOI,OAAQD,EAAGE,MAAMrB,EAASgB,EAAOI,QACvCD,EAAGG,KAAKtB,EAASgB,EAAOO,SACzBT,GAAIT,GAAOQ,KAAM,sBAAoBC,KAqC3C,MAlC8B,mBAAnBU,kBAA+BA,iBAAiB,UAhC3D,SAAuBC,OAAEb,SACxB,GAAkB,iBAAPA,QACN,GAAI,QAASA,EACjB,GAAkB,IAAdA,EAAKzB,OACRwB,EAAQC,EAAK,SAGb,IAAKxB,IAAIC,EAAE,EAAGA,EAAEuB,EAAKzB,OAAQE,IAAKsB,EAAQC,EAAKvB,SAIhDsB,EAAQC,KAuBVd,EAAM4B,mBAAY5C,EAAOkC,EAAQjC,EAAQqC,GAGxCnB,EAAenB,EACfuB,GAAOQ,KAAM,iBAAW9B,EAAQiC,OAAQA,GAAUA,EAAOW,KAAMC,SAAS,SAAMR,MAG/EtB,EAAM+B,yBAAkBC,GAEvB,IAAK1C,IAAIC,IADe,mBAAbyC,IAAyBA,EAAaA,EAAWhC,IAC9CgC,EACb9B,EAAQX,GAAKS,EAAMkB,OAAOc,EAAWzC,KAQvCS,EAAMiC,kBACL7B,KAIDJ,EAAMkC,oBACL,MAAM9B,EAAN,CACAd,IAAI6C,EAAI9B,EACRA,KACA,IAAKf,IAAIC,EAAE,EAAGA,EAAE4C,EAAE9C,OAAQE,IAAKsB,EAAQsB,EAAE5C,MAG1CgB,GAAOQ,KAAM,UAAWqB,SAAS,EAAMnD,OAAQe,EAAMmB,aAE9CnB"}